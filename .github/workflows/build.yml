---
name: Build and Publish images to Github Container Registry
on:
  push:
    branches:
      - main
  schedule:
    - cron: '5 5 * * 5' # every Friday
  workflow_dispatch:


jobs:
  push:
    runs-on: arc-runner-set-forristal
    env:
      REGISTRY: ghcr.io
      TRIVY_DISABLE_VEX_NOTICE: true
    permissions:
      security-events: write
      packages: write
      contents: write
      issues: write
      attestations: write
    steps:
      - name: 🔢 - Set version
        run: |
          echo "VERSION=$(date +%Y.%-m.%-d)" >> ${GITHUB_ENV}
          echo "DATETIME=$(date --rfc-3339=seconds)" >> ${GITHUB_ENV}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: ⤵ - Checout Repo
        uses: actions/checkout@v4

      - name: 🚢 - Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐍 - Install python dependencies
        run: pip install -r build-requirements.txt

      - name: 🤓 - Add annotations
        run: |
          cat > annotations.yml << EOT
          additional_build_steps:
            append_final:
              - LABEL org.opencontainers.image.created="${{ env.DATETIME }}"
              - LABEL org.opencontainers.image.authors="${{ github.triggering_actor }}"
              - LABEL org.opencontainers.image.url="https://github.com/${{ github.repository }}"
              - LABEL org.opencontainers.image.documentation="https://github.com/${{ github.repository }}/docs/README.md"
              - LABEL org.opencontainers.image.source="https://github.com/${{ github.repository }}"
              - LABEL org.opencontainers.image.description="A fluffier execution environment for ansible.  Should cover the bases for windows and linux prereqs."
          EOT
          docker run --rm -v "${PWD}":/workdir mikefarah/yq '. *= load("annotations.yml")' execution-environment.yml > execution-environment-final.yml
          mv execution-environment-final.yml execution-environment.yml

      - name: 🛠 - Create fluffy container file
        run: >
          ansible-builder create -v3 
      - name: ⤴ - Build and Push images
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ github.repository }}:latest
            ${{ env.REGISTRY }}/${{ github.repository }}:unstable
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}:latest
      #   - name: ⤴ - Push images
      #     run: |
      #       docker push --all-tags ${{ env.REGISTRY }}/${{ github.repository }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.sha }}
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
      # - name:  Create a Release
      #   uses: elgohr/Github-Release-Action@v5
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     title: "Unstable Release: ${{ env.VERSION }}"
      #     prerelease: true
      #     tag: ${{ env.VERSION }}
