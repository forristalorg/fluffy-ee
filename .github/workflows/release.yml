---
name: Release Stable Image
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: "Version number or tag to promote to `stable`"
        required: true
        default: "latest"
env:
  REGISTRY: ghcr.io
  VERSION: ${{ inputs.version }}
jobs:
  metadata:
    outputs:
      report: "${{ steps.report.outputs.markdown }}"
    name: Generate a pre-release report
    runs-on: arc-runner-set-forristal
    steps:
      - name: 🐳 - Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 📦 - Pull Image Version from Registry
        run: |
          docker image pull ${{ env.REGISTRY }}/${{ github.repository }}:${{ inputs.version }}

      - name: 🔎 - Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ${{ env.REGISTRY }}/${{ github.repository }}:${{ inputs.version }}
          format: "sarif"
          output: "trivy-results.sarif"

      - name: 📤 - Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

      - name: 🧾 - Generate Markdown report
        id: report
        uses: b-zurg/sarif-to-markdown@v1
        with:
          file-path: "trivy-results.sarif"
          add-job-summary: true

  release:
    name: 🎁 - Create a release and a stable tag
    runs-on: arc-runner-set-forristal
    environment: release
    needs:
      - metadata
    permissions:
      contents: write
      packages: write

    steps:
      - name: 🐳 - Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🚢 - Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚢 - Push Image to registry
        run: >
          docker buildx imagetools create 
          ${{ env.REGISTRY }}/${{ github.repository }}:${{ inputs.version }}
          --tag ${{ env.REGISTRY }}/${{ github.repository }}:stable

      - name: 🧳 - Checkout Repo
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "Release: ${{ env.VERSION }}"
          tag: ${{ env.VERSION }}
